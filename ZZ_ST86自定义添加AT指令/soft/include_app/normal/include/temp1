extern S32 SL_AssistGpsConfig(S8* pucServername, U16 usPort);
extern S32 SL_AssistGpsGetLoc(SL_ASSISTGPS_GET_LOC_CB cb);
extern S32 SL_AssistGpsArpConfig(U32 uiServer, U32 uiLanguage);
extern S32 SL_AssistGpsGetAddr(U32 ulLongitude, U32 ulLatitude, SL_ASSISTGPS_GET_ADDR_CB cb);
extern S32 SL_AssistGpsGetUtc(SL_ASSISTGPS_UTC_t *pUtcTime);
extern S32 SL_AudioStartPlayFile(HANDLE fileHandle, U8 ucFileType, U8 ucAudioPath, SL_AUDIO_PLAY_FINISH stAudioPlayCb);
extern S32 SL_AudioStopPlayFile(void);
extern S32 SL_AudioPlayStream(S32* pucStream, U32 ulStreamSize, U32 ulFormat, BOOL bLoop, SL_AUDIO_PLAY_FINISH stAudioPlayCb);
extern S32 SL_AudioStopPlayStream(void);
extern S32 SL_AudioPlayPause(BOOL bPause);
extern S32 SL_AudioSetVolume(U8 ucVolType, U8 ucLevel);
extern S32 SL_AudioSetPathVolume(U8 ucLevel);
extern S32 SL_AudioChangePath(SL_AUDIO_PATH_TYPE enAudioPath);
extern S32 SL_AudioSetMicGain(U8 ucLevel);
extern S32 SL_AudioSetSideToneGain(U8 ucLevel);
extern S32 SL_AudioGetMicGain(void);
extern S32 SL_AudioGetSideToneGain(void);
extern S32 SL_AudioVts(U8* pucDtmfStr, U8 ucLenth);
extern S32 SL_AudioRecordInit(SL_AUDIOREC_CALLBACK* cb);
extern S32 SL_AudioRecordStart(U8* pucfilename);
extern S32 SL_AudioRecordStop(SL_AUDIOREC_INFO* pstSlAudRecInfo);
extern S32 SL_AudioRecordPlayStart(U8* pucfilename);
extern S32 SL_AudioRecordPlayStop(void);
extern S32 SL_AudioPlayToOpposite(U8* pucfilename, U8 ucLoopFlag);
extern S32 SL_AudioStopPlayToOpposite(void);
extern S32 SL_VoiceRecordStart(U8 time);
extern S32 SL_VoiceRecordStop();
extern S32 SL_AudioPlayTTSToOpposite(U8* pucText, U32 ulSize);
extern S32 SL_AudioStopPlayTTSToOpposite(void);
extern S32 SL_I2cOpen(U8 ucI2cBusid);
extern S32 SL_I2cClose(U8 ucI2cBusid);
extern S32 SL_I2cWriteByte(U8 ucI2cBusid, U32 ulSlaveAddr, U32 ulMemAddr, U8 data);
extern S32 SL_I2cReadByte(U8 ucI2cBusid, U32 ulSlaveAddr, U32 ulMemAddr, U8* pData);
extern S32 SL_I2cSendData(U8 ucI2cBusid, U32 ulSlaveAddr, U32 ulMemAddr, CONST U8* pData, U32 ulLength);
extern S32 SL_I2cReadData(U8 ucI2cBusid, U32 ulSlaveAddr, U32 ulMemAddr, U8* pData, U32 ulLength);
extern S32 SL_SpiOpen(U8 ucSpiBusid, U8 ucCsNo, CONST SL_SPI_CFG_TYPE* pstSpiCfg);
extern S32 SL_SpiClose(U8 ucSpiBusid, U8 ucCsNo);
extern S32 SL_SpiWriteData(U8 ucSpiBusid, U8 ucCsNo, CONST U8* pStartAddress, U32 ulLength);
extern S32 SL_SpiReadData(U8 ucSpiBusid, U8 ucCsNo, U8* pDestAddress, U32 ulLength);
extern BOOL SL_SpiActCs(U8 ucSpiBusid, U8 ucCsNo);
extern BOOL SL_SpiDeactCs(U8 ucSpiBusid, U8 ucCsNo);
extern S32 SL_SpiSetPinState(U8 ucSpiBusid, U8 ucPin, U8 ucPinState);
extern BOOL SL_SpiTxDmaDone(U8 ucSpiBusid, U8 ucCsNo);
extern BOOL SL_SpiRxDmaDone(U8 ucSpiBusid, U8 ucCsNo);
extern VOID SL_SpiClearTxDmaDone(U8 ucSpiBusid);
extern VOID SL_SpiClearRxDmaDone(U8 ucSpiBusid);
extern BOOL SL_SpiTxFinished(U8 ucSpiBusid, U8 ucCsNo);
extern VOID SL_SpiFlushFifo(U8 ucSpiBusid);
extern VOID SL_SpiTxIfcChannelRelease(U8 ucSpiBusid);
extern VOID SL_SpiRxIfcChannelRelease(U8 ucSpiBusid);
extern VOID SL_SpiStartInfiniteWriteMode(U8 ucSpiBusid, U8 ucCsNo, SL_SPI_INFINITE_TX* penSpiInifiTx);
extern VOID SL_SpiStopInfiniteWriteMode(U8 ucSpiBusid, U8 ucCsNo);
extern S32 SL_CallInit(SL_CALL_CALLBACK* cb);
extern S32 SL_CallDial(SL_CALL_TYPE enCallType, char* callNo);
extern S32 SL_CallAnswer(void);
extern S32 SL_CallHangup(void);
extern SL_CALL_ACTIVE_STATE SL_CallGetActiveStatus(void);
extern S32 SL_Print(const S8 *fmt, ...);
extern S32 SL_ApiPrint(const S8 *fmt, ...);
extern void SL_MEMBLOCK(U8* buffer, U16 len, U8 radix);
extern void SL_HstSendEvt(U32 x);
extern S32 SL_DtmfStart(SL_DTMF_DECTECT_CB cb, SL_TMF_DET_TYPE enSlTmfType);
extern S32 SL_DtmfThreshSet(U8 ucThresh1, U8 ucThresh2);
extern S32 SL_DtmfStop(void);
extern S32 SL_DtmfSendCode(U8 ucCodeNum, U8* pucCode, U32* pucSendTimeMs, U32* pucMuteTimeMs);
extern S32 SL_FileGetFreeSize(void);
extern S32 SL_FileCreate(U8* pstFileName);
extern S32 SL_FileOpen(U8* pstFileName, SL_FS_OPEN_TYPE enFlag);
extern S32 SL_FileRead(S32 slFilehandle, U8* pucbuff, U32 ulLenth);
extern S32 SL_FileWrite(S32 slFilehandle, U8* pucbuff, U32 ulLenth);
extern S32 SL_FileSeek(S32 slFilehandle, S32 sloffset, SL_FS_SEEK_POS stSeekPos);
extern S32 SL_FileGetFilePosition(S32 slFilehandle, U32* pulPosition);
extern S32 SL_FileTruncate(S32 slFilehandle, U32 ulFileSize);
extern S32 SL_FileFlush(S32 slFilehandle);
extern S32 SL_FileClose(S32 slFilehandle);
extern S32 SL_FileGetSize(S32 slFilehandle);
extern S32 SL_FileDelete(U8* pucFileName);
extern S32 SL_FileCheck(U8* pucFileName);
extern S32 SL_FileRename(U8* pucOldname, U8* pucNewname);
extern S32 SL_FileCreateDir(U8* pucDirName);
extern S32 SL_FileRemoveDir(U8* pucDirName);
extern S32 SL_FileCheckDir(U8* pucDirName);
extern S32 SL_FileFindFirst(U8* pucFileName, PSL_FS_FIND_DATA pSlFsFindData);
extern S32 SL_FileFindNext(S32 slFilehandle, PSL_FS_FIND_DATA pSlFsFindData);
extern S32 SL_FileFindClose(S32 slFilehandle);
extern S32 SL_FileSysGetSpaceInfo(SL_FS_DEV_TYPE enStorage, U32* pulFreeSpace, U32* pulTotalSpace);
extern S32 SL_FileSysFormat(SL_FS_TYPE enSlFsType, SL_FS_FORMAT_TYPE enSlFlag);
extern U32 SL_GpioGetDir(U32 gpiox);
extern void SL_GpioSetDir(U32 gpiox, U32 gpio_dir);
extern U32 SL_GpioRead(U32 gpiox);
extern void SL_GpioWrite(U32 gpiox, U32 pin_val);
extern void SL_GpoWrite(U32 gpo, U32 pin_val);
extern void SL_GpioIntDetectInit(U32 gpiox, SL_GPIO_IRQ_MASK* pstIrqMask, SL_GPIO_IRQ_HANDLER Handler);
extern void SL_GpioIntDetectClose(U32 gpiox);
extern S32 SL_GprsAtt(U8 ucState, SL_GPRS_ATT_CB cb);
extern S32 SL_GprsSetPdp(U8 ucCid, U8 ucPdpType, U8* pucApn);
extern S32 SL_GprsAct(U8 ucCid, U8 ucState, SL_GPRS_ACT_CB cb);
extern S32 SL_GprsGetAttState(U8* pucAttState);
extern S32 SL_GprsGetActState(U8 ucCid, U8* pucActState);
extern S32 SL_GprsSetPdpWithUsr(U8 ucCid, U8 ucPdpType, U8* pucApn, U8* pucUsr, U8* pucPasswrd);
extern void SL_KeyEventCallback(SL_KEY_CB_UPDW cb);
extern void SL_LpwrEnterDSleep(SL_WAKEUP_TYPE_t wkup_type);
extern void SL_LpwrEnterWakeup(void);
extern SL_LPWR_STATUS_t SL_LpwrGetCurrSt(void);
extern PVOID SL_GetMemory(U32 ulSize);
extern BOOL SL_FreeMemory(PVOID mem);
extern U32 SL_MemMaxCanAllocSize(void);
extern U32 SL_MemTotalLeftSize(void);
extern HANDLE SL_CreateTask(SL_TASK_ENTRY pTaskEntry, U16 usStackSize, U8 ucPriotiry, PCSTR pTaskName);
extern HANDLE SL_GetAppTaskHandle(VOID);
extern S32 SL_CreateSemaphore(SL_SEMAPHORE *semaphore, U32 initial_count);
extern S32 SL_DeleteSemaphore(SL_SEMAPHORE semaphore);
extern S32 SL_TakeSemaphore(SL_SEMAPHORE semaphore, U32 timeout);
extern S32 SL_GiveSemaphore(SL_SEMAPHORE semaphore);
extern S32 SL_SendEvents(SL_TASK hTask, SL_EVENT *pEvent);
extern void SL_GetEvent(SL_TASK hTask, SL_EVENT* pstEvent);
extern U32 SL_CreateMutex(void);
extern U8 SL_TakeMutex(U8 ucMutexId);
extern void SL_GiveMutex(U8 ucMutexId, U8 ucUserId);
extern void SL_DeleteMutex(U8 ucMutexId);
extern U32 SL_GetCurrentTaskPriority(void);
extern U32 SL_SysRuntime(VOID);
extern HANDLE SL_EnterCriticalSection(void);
extern BOOL SL_ExitCriticalSection(HANDLE hSection);
extern S32 SL_RtcSet(SL_RTC_TIME* pstSlRtcTime);
extern S32 SL_RtcGet(SL_RTC_TIME* pstSlRtcTime);
extern S32 SL_RtcSetAlarm(SL_RTC_ALARM *pstSlRtcAlarm);
extern S32 SL_RtcDelAlarm(U8 ucIdx);
extern S32 SL_RtcClrAllAlarm(VOID);
extern S32 SL_RtcGetLastErr(VOID);
extern S32 SL_RtcSetAlmCb(SL_ALM_CB cb);
extern S32 SL_SmsSendTextSms(U8* pucDialNo, U8* msg);
extern S32 SL_SmsSendPDUSms(U16 usLenth, U8* msg);
extern S32 SL_SmsReadSms(U8 ucIndex, SL_SMS_CB_CMGR cb);
extern void SL_SmsSetNewSmsCallback(SL_SMS_CB_CMTI cb);
extern S32 SL_SmsSetSmsFormat(U8 ucFormat);
extern S32 SL_SmsGetSmsFormat(void);
extern S32 SL_SmsDeleteSms(U8 ucIndex, U8 ucFlag);
extern S32 SL_SmsSetStorage(SL_SMS_STORAGE_TYPE enMem1, SL_SMS_STORAGE_TYPE enMem2, SL_SMS_STORAGE_TYPE enMem3);
extern S32 SL_SmsReadSmsList(SL_SMS_LIST_STATE_TYPE ucSmsState, SL_SMS_CB_CMGL cb);
extern S32 SL_SmsSetInfoCenterNum (U8* pucNum, U8 ucLenth);
extern S32 SL_SmsGetInfoCenterNum(U8* pucInfoCenterNum);
extern void SL_SmsGetNetStatusCallback(SL_SMS_CB_CMST cb);
extern void SL_SmsSetSmsFullCallback(SL_SMS_CB_FULL cb);
extern void SL_SmsSetSendSmsCallback(SL_SMS_CB_CMGS cb);
extern U32 SL_SmsSetTxtModeDataCodSch(SL_SMS_TXT_MODE_DATA_CODE_TYPE enSlSmsCodeType);
extern U8* SL_SmsReadSmsTelNo(void);
extern S32 SL_SmsGetLongSmsPara(SL_SMS_LONG_MSG* pstSmsLongMsg);
extern char* SL_itoa(S32 value, char *string, S32 radix);
extern char* SL_ui64toa(U64 value, U8* string, S32 radix);
extern S32 SL_atoi(char *string);
extern U64 SL_atoui64(char *string);
extern char* SL_Strcpy(char* dest, const char* src);
extern char* SL_Strncpy(char* dest, const char* src, U16 size);
extern char* SL_Strcat(char* s1, const char* s2);
extern char* SL_Strncat(char* s1, const char* s2, U16 size);
extern U32 SL_Strlen(const char* str);
extern S32 SL_Strcmp(const char* s1, const char* s2);
extern S32 SL_Strncmp(const char* s1, const char* s2, U16 size);
extern void* SL_Memset(void* dest, U8 value, U32 size);
extern void* SL_Memcpy(void* dest, const void* src, U16 size);
extern S32 SL_Memcmp(const void* dest, const void* src, U16 size);
extern void* SL_Memmove(void* dest, const void* src, U16 size);
extern char* SL_Strstr(const char* s1, const char* s2);
extern char* SL_Strchr(const char* s1, U16 ch);
extern S32 SL_Sprintf(char *buf, const char *fmt,...);
extern volatile void SL_LongJmp (SL_JMP_BUF env,  S32 value);
extern DOUBLE SL_Sin(DOUBLE x);
extern DOUBLE SL_Cos(DOUBLE x);
extern DOUBLE SL_Asin(DOUBLE x);
extern DOUBLE SL_Acos(DOUBLE x);
extern DOUBLE SL_Tan(DOUBLE x);
extern DOUBLE SL_Cot(DOUBLE x);
extern DOUBLE SL_Atan(DOUBLE x);
extern DOUBLE SL_Sqrt(DOUBLE x);
extern DOUBLE SL_Atof(char *string);
extern DOUBLE SL_Fabs(DOUBLE x);
extern DOUBLE SL_Atan2(DOUBLE y, DOUBLE x);
extern void SL_Reset(void);
extern void SL_Sleep(U32 ulMsecond);
extern void SL_PowerDown(U8 ucPowerType);
extern void SL_PowerOn(void);
extern BOOL SL_StartWatchDog(U32 ulTime);
extern void SL_FeedWatchDog(void);
extern void SL_StopWatchDog(void);
extern S32 SL_GetCoreVer(U8* pucVer, U16 usLenth);
extern BOOL SL_CoreInitFinish(void);
extern void SL_GetPowerOnReason(U8* penCause);
extern void SL_GetDeviceCurrentRunState(S32* plSimCard, S32* plCreg, S32* plCgreg, S8* pucRssi, U8* pucBer);
extern BOOL SL_IsSIMInserted(void);
extern S32 SL_GSM_GetIMEI(U8* pucImei, U16 usLenth);
extern S32 SL_GSM_GetGMR(U8* pucGmr, U16 usLenth);
extern U8 SL_GSM_GetCALIB();
extern S32 SL_GSM_GetSN(U8* pucImei, U16 usLenth);
extern S32 SL_SIM_GetIMSI(U8* pucImsi, U16 usLenth);
extern S32 SL_GSM_GetPSN(U8* pucPsn, U16 usLenth);
extern S32 SL_GSM_GetSIGN(U8* pucSign, U16 usLenth);
extern S32 SL_GSM_WriteCfun(U8 ucCfun, U16 usLenth);
extern VOID SL_GSM_WriteTest(U8 ucTest,U8* testinfo);
extern S32 SL_GSM_WriteSign(U8* pucSign, U16 usLenth);
extern S32 SL_GSM_WriteIMEI(U8* pucImei, U16 usLenth);
extern S32 SL_GSM_WriteSN(U8* pucImei, U16 usLenth);
extern S32 SL_GetOperator(U8* pucOperate, U8 ucLenth);
extern S32 SL_RetrieveNodeBInfo(SL_NW_NODEB_INFO* pstSlNodeBInfo);
extern S32 SL_GetNwStatus(void);
extern void SL_PmuEnablePower(SL_PMD_POWER_ID_TYPE enPmdId, BOOL on);
extern U16 SL_GetAdcValue(SL_ADC_CHAN enChan);
extern SL_APP_UPDATE_STATUS SL_AppUpdateInit(U8 *buf, U32 len);
extern S32 SL_SimPinInit(SL_SIM_CALLBACK* cb);
extern S32 SL_SimEnterPwd(U8* pucPwd);
extern S32 SL_SimGetAuthInfo(void);
extern S32 SL_SimChangePwd(U8 ucFac, U8* pucOldPwd, U8* pucNewPwd);
extern S32 SL_SimLock(U8 ucFac, U8 ucMode, U8* pucPwd);
extern S32 SL_SimLockStatusQuery(U8 ucFac);
extern S32 SL_SimSetPwd(U8* pucPukPwd, U8* pucPinPwd);
extern S32 SL_SimDropCbInit(SL_SIM_CB_DROP cb);
extern S32 SL_SimGetCCID(SL_SIM_CB_GET_CCID cb);
extern S32 SL_RetrieveCellInfo(SL_NW_CELL_TYPE enCellType, SL_NW_CB_CELL_INFO cb);
extern VOID SL_PwlSetLevel(SL_PWL_ID enSlPwlId, U8 ucLevel);
extern VOID SL_SetFlightMode(SL_FLIGHT_MODE_CB cb);
extern VOID SL_ExitFlightMode(SL_EXIT_FLIGHT_MODE_CB cb);
extern VOID SL_InitBatteryCb(SL_BATTERY_CB cb);
extern VOID SL_InitPwrOnCb(SL_PWRON_CB cb);
extern VOID SL_InitPwrOffCb(SL_PWROFF_CB cb);
extern void SL_FintIrqSetMask(BOOL mask);
extern BOOL SL_GetRfTemp(U8* pucTemp);
extern VOID SL_JammFuncInit(SL_JAMM_DETECT_CB cb);
extern VOID SL_JammFuncEnable(VOID);
extern VOID SL_JammFuncDisable(VOID);
extern S32 SL_TcpipGprsNetInit(U8 ucCidIndex, SL_TCPIP_CALLBACK *cb);
extern S32 SL_TcpipGprsApnSet(U8* pucApn, U8* pucUsrId, U8* pucPassword);
extern S32 SL_TcpipGprsApnGet(U8* pucApn, U8* pucUsrId, U8* pucPassword);
extern S32 SL_TcpipGprsNetActive(void);
extern S32 SL_TcpipGprsNetDeactive(void);
extern S32 SL_TcpipGprsNetGetState(U8* pucNetState, U8* pucGprsRegState);
extern S32 SL_TcpipSocketCreate(S32 slSocketId, U8 ucSocketType);
extern S32 SL_TcpipSocketClose(S32 slSocketId);
extern S32 SL_TcpipSocketConnect(S32 slSocketId, U8* pucIpAddr, U16 usPort);
extern S32 SL_TcpipSocketSend(S32 slSocketId, U8* pucData, U16 usDatalenth);
extern S32 SL_TcpipSocketRecv(S32 slSocketId, U8* pucData, U16 usDatalenth);
extern S32 SL_TcpipSocketSendTo(S32 slSocketId, U8* pucData, U16 usDatalenth, U8* pucIpAddr, U16 usPort);
extern S32 SL_TcpipSocketRecvFrom(S32 slSocketId, U8* pucData, U16 usDatalenth, U8* pucIpAddr, U16 usPort);
extern S32 SL_TcpipSocketBind(S32 slSocketId);
extern S32 SL_tcpip_socket_bind(S32 slSocketId, U16 localPort);
extern S32 SL_TcpipSocketListen(S32 slSocketId);
extern S32 SL_TcpipSocketAccept(S32 slSocketId, U8* pucIpAddr, U16* pusPort);
extern S32 SL_TcpipGetState(S32 slSocketId);
extern S32 SL_TcpipGetHostIpbyName(U8 ucCid, U8* pucHostname, SL_TCPIP_GET_HOSTIP_BY_NAME cb);
extern S32 SL_TcpipGetLocalIpAddr(U8 ucCid, U8* pucIpAddr);
extern S32 SL_TcpipGetDnsServerAddr(U8 ucCid, U8* pucPrimaryAddr, U8* pucSecondAddr);
extern S32 SL_TcpipSetDnsServerAddr(U8 ucCid, BOOL bPrimarySet, U8* pucPrimayAddr, BOOL bSecondarySet, U8* pucSecondaryAddr);
extern S32 SL_TcpipSocketCheckIp(U8* pucIpAddrString, U32* pulIpAddr);
extern U32 SL_TcpipSocketHtonl(U32 n);
extern U16 SL_TcpipSocketHtons(U16 n);
extern S32 SL_TcpipSetKeepAliveTime(U32 ulTime, U32 ulEnableFlag);
extern U8 SL_TcpipSetRetrTimes(U8 ucRetrTimes);
extern U8 SL_TcpipGetRetrTimes(void);
extern U8 SL_TcpipSetRetrTime(U8 ucRetrTime);
extern U8 SL_TcpipGetRetrTime(void);
extern U8 SL_TcpipGetCid(void);
extern S32 SL_TcpipOverWifiCfg(S32 slSocketId);
extern S32 SL_TcpipOverWifiClear(S32 slSocketId);
extern S32 SL_TcpipOverWifiStat(S32 slSocketId, U8* pucStat);
extern S32 SL_TcpipWifiLocalIpAddrCfg(U8* pucIpAddr);
extern S32 SL_TcpipGetWifiLocalIpAddr(U8* pucIpAddr);
extern BOOL SL_StartTimer(SL_TASK hTask, U8 timeid, SL_TIMOPT timemode, U32 ticks);
extern BOOL SL_StopTimer(SL_TASK hTask, U8 timeid);
extern U32 SL_SecondToTicks(U32 ulSec);
extern U32 SL_MilliSecondToTicks(U32 ulMilliSec);
extern BOOL SL_GetLocalTime(SL_SYSTEMTIME* pSystemTime);
extern BOOL SL_SetLocalTime(SL_SYSTEMTIME* pSystemTime);
extern U32 SL_TmGetTick(void);
extern BOOL SL_SetTimeZone(S8 scTimeZone);
extern S8 SL_GetTimeZone(void);
extern U32 SL_GetTime(void);
extern BOOL SL_FileTimeToSystemTime(SL_FILETIME nFileTime, SL_SYSTEMTIME* pSystemTime);
extern BOOL SL_UartOpen(U8 ucUartId);
extern void SL_UartClose(U8 ucUartId);
extern S32 SL_UartSendData(SL_UART_ID enUartId, U8* pucBuf, U16 usLenth);
extern S32 SL_UartSetBaudRate(SL_UART_ID enUartId, SL_UART_BAUDRATE slRate);
extern S32 SL_UartSetDCBConfig(SL_UART_ID enUartId, 
                                SL_UART_DATABITS slDataBits, 
                                SL_UART_STOPBITS slStopBits, 
                                SL_UART_PARITY slParity);
extern void SL_UartSetFlowCtrl(U8 dte_AfcMode,U8 dce_AfcMode);
extern U16 SL_UartGetTxRoomLeft(SL_UART_ID enUartId);
extern U32 SL_UartGetTxRestBytes(SL_UART_ID enUartId);
extern U16 SL_UartGetBytesAvail(SL_UART_ID enUartId);
extern void SL_UartClrRxBuffer(SL_UART_ID enUartId);
extern void SL_UartClrTxBuffer(SL_UART_ID enUartId);
extern void SL_UartSetAppTaskHandle(SL_UART_ID enUartId, HANDLE taskHandle);
extern HANDLE SL_UartGetAppTaskHandle(SL_UART_ID enUartId);
extern void SL_UartSetDlMode(void);
extern U8 SL_UartGetDlMode(void);
extern S32 SL_PbkInit(SL_PBK_CALLBACK* cb);
extern S32 SL_PbkGetOwnNumber(void);
extern S32 SL_PbkSetStorage(SL_PBK_STORAGE_TYPE enStorageType);
extern S32 SL_PbkReadEntry(U8 ucStartIndex, U8 ucEndIndex);
extern S32 SL_PbkWriteEntry(U8 ucIndex, U8* pucTelNo, U8* pucName);
extern S32 SL_PbkFindEntry(U8* pucName);
extern S32 SL_PbkDeleteEntry(U8 ucIndex);
extern void SL_PbkSetCharset(SL_PBK_CHARSET enCharSet);
extern SL_PBK_CHARSET SL_PbkGetCharSet(void);
extern SL_FTP_CALLBACK* SL_Ftp_GetCb(void); 
extern S32 SL_Ftp_Callback_Init(SL_FTP_CALLBACK *cb);
extern S32 SL_Ftp_Open(SL_FTP_Connect_Info* pstConnectInfo);
extern S32 SL_Ftp_Close();
extern S32 SL_Ftp_Download(U8 *pu8RemoteFile, SL_FTP_File_TYPE emFileType);
extern S32 SL_Ftp_Upload(U8 *pu8FileName, U8 *pFileData, U32 u32FileLen, SL_FTP_File_TYPE emFileType);
extern S32 SL_Ftp_PWD(void);
extern S32 SL_Ftp_CWD(U8 *path);
extern S32 SL_Ftp_CDUP(void);
extern S32 SL_Ftp_MKD(U8 *dirName);
extern S32 SL_Ftp_RMD(U8 *dirName);
extern S32 SL_Ftp_DEL(U8 *fileName);
extern S32 SL_Ftp_REN(U8 *NewName, U8 *OldName);
extern S32 SL_Ftp_LIST(U8 *fileName);
extern VOID SL_LbsInit(VOID);
extern S32 SL_LbsSendReq(SL_LBS_REQ_INFO_STRUCT* pstLbsReqInfo);
extern S32 SL_LbsRspInfoParse(S8* scRcvInfo, SL_LBS_RSP_INFO_STRUCT* pstRspInfo);
extern SL_HTTP_CALLBACK* SL_Http_GetCb(void);
extern S32 SL_HTTP_Callback_Init(SL_HTTP_CALLBACK *cb);
extern S32 SL_Http_Init(void);
extern S32 SL_Http_Set_Para(char *pUrl, char *pUserName, char *pPassword, char *pUserAgent, SL_HTTP_RequestType ReqType);
extern S32 SL_Http_Send_Data(char *pData, SL_HTTP_DataType type);
extern SL_WIFI_CALLBACK* SL_WifiGetCb(void);
extern S32 SL_WifiInit(SL_WIFI_CALLBACK *CB);
extern S32 SL_wifi_power_on(SL_WIFI_PWRON_MODE_t mode);
extern S32 SL_WifiPowerOn(U8 *ucpMacAddr, SL_WIFI_PWRON_MODE_t mode);
extern S32 SL_WifiPowerOff(void);
extern S32 SL_WifiScan(void);
extern S32 SL_WifiConnectAp(SL_WIFI_BSS_DESC_t *pWifiBssDesc, U8 *ucpPasswd, U8 ucLen);
extern S32 SL_WifiDisconnectAp(void);
extern S32 SL_WifiDhcp(void);
extern S32 SL_WifiSendMacData(U32* pulMacData, U16 usLen, U8 ucType);
extern SL_WIFI_PWRON_MODE_t SL_WifiGetPwrOnMode(void);
extern S32 SL_WifiSetTxPower(U16 usDiv, U16 usBase);
